/**
 * Generated by Scrooge
 *   version: 4.13.0-SNAPSHOT
 *   rev: 37381b506e4da989e44d86ebf4c7f8eb1e08ca2e
 *   built at: 20170322-170655
 */


import thrift from 'thrift'
import {Q, Thrift} from 'thrift'



export class ExampleException {
    public something: number
    constructor(args?) {
    }

    public read(input) {
        input.readStructBegin()
        while (true) {
            const {fname, ftype, fid} = input.readFieldBegin()
            if (ftype === Thrift.Type.STOP) {
                break
            }
            switch (fid) {
                case 1:
                    // reading something
                    this.something = input.readI32()
                    break

                default:
                    input.skip(ftype)
            }
            input.readFieldEnd()
        }
        input.readStructEnd()
        return
    }

    public write(output) {
        output.writeStructBegin("ExampleException")
        if (this.something !== null && this.something !== undefined) {
            // writing something
            if (true) {
                const something_item = this.something
                output.writeFieldBegin("something", Thrift.Type.I32, 1)
                output.writeI32(something_item)
                output.writeFieldEnd()
            }
        }
        output.writeFieldStop()
        output.writeStructEnd()
        return
    }
}