/**
 * Generated by Scrooge
 *   version: 4.13.0-SNAPSHOT
 *   rev: eb527853cd68a47db6989d5d8ad99cf9fd1e2a1b
 *   built at: 20170322-114458
 */


import thrift from 'thrift'
import {Q, Thrift} from 'thrift'

import {AuthResult} from './AuthResult'

export class TalonResponse {
    public authorization: AuthResult
    constructor(args?) {
    }

    public read(input) {
        input.readStructBegin()
        while (true) {
            const {fname, ftype, fid} = input.readFieldBegin()
            if (ftype === Thrift.Type.STOP) {
                break
            }
            input.skip(ftype)
            input.readFieldEnd()
        }
        input.readStructEnd()
        return
    }

    public write(output) {
        output.writeStructBegin("TalonResponse")
                if (this.authorization !== null && this.authorization !== undefined) {
            if (this.authorization !== null) {
                        const authorization_item = this.authorization
                        output.writeFieldBegin("authorization", Thrift.Type.ENUMI32, 1)
                        // isList: false, isSet: false, isMap: false, isStruct: false, isEnum: ?, isBase: false
                        // enum Handled by `libthrift` in Node
                        output.writeFieldEnd()
                    }
            output.writeFieldEnd()
        }
        
        output.writeFieldStop()
        output.writeStructEnd()
        return
    }
}