/**
 * Generated by Scrooge
 *   version: 4.13.0-SNAPSHOT
 *   rev: 952e3625feae4a1a9eeaf4a75d413531b1770809
 *   built at: 20170404-132108
 */
/**
 * It's considered good form to declare an exception type for your service.
 * Thrift will serialize and transmit them transparently.
 */


import thrift from 'thrift'
import {Thrift, Protocol, Int64} from 'thrift'



export interface ITodoExceptionArgs {
    description: string
}

export class TodoException {
    public description: string
    // If possible, populate this with .populate method instead so that
    // we can ensure the struct is constructed correctly
constructor(args?: ITodoExceptionArgs) {
        if (args) {
            if (args.description != null) {
                this.description = args.description
            }
        }
    }
    populate(args: ITodoExceptionArgs) {
            if (args.description != null) {
                this.description = args.description
            } else {
                throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field description is unset!')
            }
    }

    public read(input: Protocol): void {
        input.readStructBegin()
        while (true) {
    const {ftype, fid} = input.readFieldBegin()
            if (ftype === Thrift.Type.STOP) {
                break
            }
            switch (fid) {
                case 1:
                    this.description = input.readString()
                    break
                default:
                    input.skip(ftype)
            }
            input.readFieldEnd()
        }
        input.readStructEnd()
        return
    }

    public write(output: Protocol): void {
        output.writeStructBegin("TodoException")
        if (this.description != null) {
            if (this.description !== null) {
                const description_item = this.description
                output.writeFieldBegin("description", Thrift.Type.STRING, 1)
                output.writeString(description_item)
                output.writeFieldEnd()
            }
        }
        output.writeFieldStop()
        output.writeStructEnd()
        return
    }
}