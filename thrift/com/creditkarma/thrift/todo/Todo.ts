/**
 * Generated by Scrooge
 *   version: 4.13.0-SNAPSHOT
 *   rev: 5b0cb3ee0c7699372f2c21cf043ce2b0e7892346
 *   built at: 20170323-104611
 */


import thrift from 'thrift'
import {Q, Thrift} from 'thrift'



export class Todo {
    public id: number
    public name: string
    public completedAt: string
    public deletedAt: string
    constructor(args?) {
        if (args) {
            if (args.id !== undefined && args.id !== null) {
                this.id = args.id
            } else {
                throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field id is unset!')
            }
            if (args.name !== undefined && args.name !== null) {
                this.name = args.name
            } else {
                throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field name is unset!')
            }
            if (args.completedAt !== undefined && args.completedAt !== null) {
                this.completedAt = args.completedAt
            }
            if (args.deletedAt !== undefined && args.deletedAt !== null) {
                this.deletedAt = args.deletedAt
            }
        }
    }

    public read(input) {
        input.readStructBegin()
        while (true) {
            const {fname, ftype, fid} = input.readFieldBegin()
            if (ftype === Thrift.Type.STOP) {
                break
            }
            switch (fid) {
                case 1:
                    this.id = input.readI64()
                    break
                case 2:
                    this.name = input.readString()
                    break
                case 3:
                    this.completedAt = input.readString()
                    break
                case 4:
                    this.deletedAt = input.readString()
                    break
                default:
                    input.skip(ftype)
            }
            input.readFieldEnd()
        }
        input.readStructEnd()
        return
    }

    public write(output) {
        output.writeStructBegin("Todo")
        if (this.id !== null && this.id !== undefined) {
            if (true) {
                const id_item = this.id
                output.writeFieldBegin("id", Thrift.Type.I64, 1)
                output.writeI64(id_item)
                output.writeFieldEnd()
            }
        }
        if (this.name !== null && this.name !== undefined) {
            if (this.name !== null) {
                const name_item = this.name
                output.writeFieldBegin("name", Thrift.Type.STRING, 2)
                output.writeString(name_item)
                output.writeFieldEnd()
            }
        }
        if (this.completedAt !== null && this.completedAt !== undefined) {
            if (this.completedAt !== undefined) {
                const completedAt_item = this.completedAt
                output.writeFieldBegin("completedAt", Thrift.Type.STRING, 3)
                output.writeString(completedAt_item)
                output.writeFieldEnd()
            }
        }
        if (this.deletedAt !== null && this.deletedAt !== undefined) {
            if (this.deletedAt !== undefined) {
                const deletedAt_item = this.deletedAt
                output.writeFieldBegin("deletedAt", Thrift.Type.STRING, 4)
                output.writeString(deletedAt_item)
                output.writeFieldEnd()
            }
        }
        output.writeFieldStop()
        output.writeStructEnd()
        return
    }
}