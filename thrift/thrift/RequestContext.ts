/**
 * Generated by Scrooge
 *   version: 4.13.0-SNAPSHOT
 *   rev: 37381b506e4da989e44d86ebf4c7f8eb1e08ca2e
 *   built at: 20170322-170720
 */
/**
 * This struct serializes com.twitter.finagle.Context
 */


import thrift from 'thrift'
import {Q, Thrift} from 'thrift'



export class RequestContext {
    public key: Buffer
    public value: Buffer
    constructor(args?) {
    }

    public read(input) {
        input.readStructBegin()
        while (true) {
            const {fname, ftype, fid} = input.readFieldBegin()
            if (ftype === Thrift.Type.STOP) {
                break
            }
            switch (fid) {
                case 1:
                    // reading key
                    this.key = input.readBinary()
                    break
case 2:
                    // reading value
                    this.value = input.readBinary()
                    break

                default:
                    input.skip(ftype)
            }
            input.readFieldEnd()
        }
        input.readStructEnd()
        return
    }

    public write(output) {
        output.writeStructBegin("RequestContext")
        if (this.key !== null && this.key !== undefined) {
            // writing key
            if (this.key !== null) {
                const key_item = this.key
                output.writeFieldBegin("key", Thrift.Type.STRING, 1)
                output.writeBinary(key_item)
                output.writeFieldEnd()
            }
        }
        if (this.value !== null && this.value !== undefined) {
            // writing value
            if (this.value !== null) {
                const value_item = this.value
                output.writeFieldBegin("value", Thrift.Type.STRING, 2)
                output.writeBinary(value_item)
                output.writeFieldEnd()
            }
        }
        output.writeFieldStop()
        output.writeStructEnd()
        return
    }
}